"""unified_node_system_complete_schema_overhaul

Revision ID: b8cf2fcac675
Revises: feadb118c806
Create Date: 2025-08-21 21:48:16.796148

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b8cf2fcac675'
down_revision: Union[str, None] = 'feadb118c806'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('nodes',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('owner_id', sa.UUID(), nullable=False),
    sa.Column('parent_id', sa.UUID(), nullable=True),
    sa.Column('node_type', sa.String(length=20), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('sort_order', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['parent_id'], ['nodes.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_node_owner_sort', 'nodes', ['owner_id', 'sort_order'], unique=False)
    op.create_index('ix_node_parent', 'nodes', ['parent_id'], unique=False)
    op.create_index('ix_node_type', 'nodes', ['node_type'], unique=False)
    op.create_index(op.f('ix_nodes_owner_id'), 'nodes', ['owner_id'], unique=False)
    op.create_index(op.f('ix_nodes_parent_id'), 'nodes', ['parent_id'], unique=False)
    op.create_table('node_notes',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('body', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['nodes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('node_tasks',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('todo', 'in_progress', 'done', 'dropped', name='task_status'), nullable=False),
    sa.Column('priority', sa.Enum('low', 'medium', 'high', 'urgent', name='task_priority'), nullable=False),
    sa.Column('due_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('earliest_start_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('archived', sa.Boolean(), nullable=False),
    sa.Column('recurrence_rule', sa.Text(), nullable=True),
    sa.Column('recurrence_anchor', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['nodes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_task_due_at', 'node_tasks', ['due_at'], unique=False)
    op.create_index('ix_task_priority', 'node_tasks', ['priority'], unique=False)
    op.create_index('ix_task_status', 'node_tasks', ['status'], unique=False)
    op.create_table('node_tags',
    sa.Column('node_id', sa.UUID(), nullable=False),
    sa.Column('tag_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['node_id'], ['nodes.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('node_id', 'tag_id')
    )
    op.create_table('note_links',
    sa.Column('source_note_id', sa.UUID(), nullable=False),
    sa.Column('target_note_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['source_note_id'], ['notes.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['target_note_id'], ['notes.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('source_note_id', 'target_note_id')
    )
    op.create_table('note_tags',
    sa.Column('note_id', sa.UUID(), nullable=False),
    sa.Column('tag_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['note_id'], ['notes.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('note_id', 'tag_id')
    )
    op.create_table('note_tasks',
    sa.Column('note_id', sa.UUID(), nullable=False),
    sa.Column('task_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['note_id'], ['notes.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('note_id', 'task_id')
    )
    op.alter_column('note_lists', 'sort_order',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_nullable=False)
    op.drop_index(op.f('uq_notelist_owner_system_root'), table_name='note_lists', postgresql_where='(is_system_root = true)')
    op.alter_column('tag_lists', 'sort_order',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_nullable=False)
    op.drop_index(op.f('uq_taglist_owner_system_root'), table_name='tag_lists', postgresql_where='(is_system_root = true)')
    op.drop_index(op.f('uq_tasklist_owner_system_root'), table_name='task_lists', postgresql_where='(is_system_root = true)')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index(op.f('uq_tasklist_owner_system_root'), 'task_lists', ['owner_id'], unique=True, postgresql_where='(is_system_root = true)')
    op.create_index(op.f('uq_taglist_owner_system_root'), 'tag_lists', ['owner_id'], unique=True, postgresql_where='(is_system_root = true)')
    op.alter_column('tag_lists', 'sort_order',
               existing_type=sa.INTEGER(),
               server_default=sa.text('0'),
               existing_nullable=False)
    op.create_index(op.f('uq_notelist_owner_system_root'), 'note_lists', ['owner_id'], unique=True, postgresql_where='(is_system_root = true)')
    op.alter_column('note_lists', 'sort_order',
               existing_type=sa.INTEGER(),
               server_default=sa.text('0'),
               existing_nullable=False)
    op.drop_table('note_tasks')
    op.drop_table('note_tags')
    op.drop_table('note_links')
    op.drop_table('node_tags')
    op.drop_index('ix_task_status', table_name='node_tasks')
    op.drop_index('ix_task_priority', table_name='node_tasks')
    op.drop_index('ix_task_due_at', table_name='node_tasks')
    op.drop_table('node_tasks')
    op.drop_table('node_notes')
    op.drop_index(op.f('ix_nodes_parent_id'), table_name='nodes')
    op.drop_index(op.f('ix_nodes_owner_id'), table_name='nodes')
    op.drop_index('ix_node_type', table_name='nodes')
    op.drop_index('ix_node_parent', table_name='nodes')
    op.drop_index('ix_node_owner_sort', table_name='nodes')
    op.drop_table('nodes')
    # ### end Alembic commands ###

